@using JobApplicationManagement.Utils;
@using Repository.Models;
@model List<Resume>;

@{
    var keywords = ViewData["Keywords"] as string;
    var totalPages = ViewData["TotalPages"] as int?;
    var pageNumber = ViewData["PageNumber"] as int?;
    var selectedId = ViewData["SelectedId"] as long?;
}

<h1>Resume</h1>

@if (Model.Count > 0)
{
    <div class="card">
        <div class="card-header d-flex align-items-center justify-content-between">
            <h5 class="card-header">Resume Management</h5>
        <form id="" asp-action="CreateResume" asp-controller="Resume" class="mb-3" method="get">
            <button class="btn btn-primary float-end" type="submit">
                New
            </button>
        </form>
        </div>
        <div class="card p-4">
            <div class="table-responsive text-nowrap">
                <div class="d-flex justify-content-between align-items-end">
                    <div class="d-flex gap-4 align-items-end">
                        <form id="form-filter" asp-controller="Resume" asp-action="ViewResumes" method="get" class="form row mb-4 d-flex align-items-end">
                            <div class="col-md-6">
                                <label for="filter-query" class="col-form-label">Search</label>
                                <div>
                                    <input id="filter-query" class="form-control me-2" type="search" placeholder="Name, Email, Phone" aria-label="Search" asp-for="@keywords" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </form>
                       
                    </div>
                </div>
            </div>

            <div id="account-list"></div>
        </div>
        <div class="table-responsive text-nowrap">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Applicants</th>
                        <th>Last Modified At</th>
                        <th>Phone</th>
                        <th>Gmail</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                    @foreach (var resume in Model)
                    {
                        <tr>
                            <td>@resume.Id</td>
                            <td>
                                <a href="@Url.Action("ViewDetailResume", "Resume",  new { id = resume.Id})"><span>@resume.Name</span></a>

                            </td>
                            <td>@resume.ModifiedAt</td>
                            <td>@resume.Phone</td>
                            <td>@resume.Email</td>
                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="@Url.Action("UpdateResume", "Resume",  new { id = resume.Id})"><i class="bx bx-edit-alt me-2"></i> Edit</a>
                                        <a class="dropdown-item text-danger" href="@Url.Action("DeleteResume", "Resume",  new { id = resume.Id})"><i class="bx bx-trash me-2"></i> Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (totalPages > 0)
    {
        <div class="my-3">
            <div class="row">
                <div class="col">
                    <div class="max-auto">
                        <nav aria-label="Page navigation">
                            <ul class="pagination d-flex justify-content-end">
                                @if (pageNumber != 1)
                                {
                                    <li onclick="getPage(1)" class="page-item first">
                                        <a class="page-link" href="@Url.Action("ViewResumes", "Resume",  new { pageNumber = pageNumber - 1, keywords = keywords})">
                                            <i class="tf-icon bx bx-chevrons-left"></i>
                                        </a>
                                    </li>
                                }
                                @for (int i = 1; i <= totalPages; i++)
                                {
                                    <li onclick="getPage(@i)" id="page-link" data-page-number="@i" class="page-item @(i == pageNumber ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("ViewResumes", "Resume",  new { pageNumber = i, keywords = keywords})">@i</a>
                                    </li>
                                }

                                @if (pageNumber != totalPages)
                                {
                                    <li onclick="getPage(@totalPages)" class="page-item last">
                                        <a class="page-link" href="@Url.Action("ViewResumes", "Resume",  new { pageNumber = pageNumber + 1, keywords = keywords})">
                                            <i class="tf-icon bx bx-chevrons-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    }
}
